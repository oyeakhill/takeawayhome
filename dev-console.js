// ==============================================\n// DEVELOPER CONSOLE FOR RUNTIME KEYTIP MANAGEMENT\n// Add this to browser console for quick testing\n// ==============================================\n\n// Usage in browser console:\n// addCustomKeytip(['H', 'X', 'X'], 'My Custom Command')\n// removeCustomKeytip(['H', 'X', 'X'])\n// listAllKeytips()\n\nwindow.keytipsConsole = {\n  // Add a keytip at runtime (for testing)\n  addCustomKeytip: (sequence, label) => {\n    console.log(`üîß DEV: Adding custom keytip [${sequence.join(' ‚Üí ')}] ‚Üí ${label}`);\n    // This would integrate with the dynamic registration system\n    alert(`Would add: ${sequence.join(' ‚Üí ')} ‚Üí ${label}`);\n  },\n  \n  // Remove a keytip\n  removeCustomKeytip: (sequence) => {\n    console.log(`üóëÔ∏è DEV: Removing keytip [${sequence.join(' ‚Üí ')}]`);\n    alert(`Would remove: ${sequence.join(' ‚Üí ')}`);\n  },\n  \n  // List all current keytips\n  listAllKeytips: () => {\n    console.log('üìã Current KeyTips:');\n    console.log('‚Ä¢ Alt/Cmd ‚Üí H ‚Üí V ‚Üí V  (Paste Values)');\n    console.log('‚Ä¢ Alt/Cmd ‚Üí H ‚Üí B ‚Üí B  (Border Bottom)');\n    console.log('‚Ä¢ Alt/Cmd ‚Üí H ‚Üí B ‚Üí T  (Border Top)');\n    console.log('‚Ä¢ Alt/Cmd ‚Üí H ‚Üí O ‚Üí I  (AutoFit Column)');\n    console.log('‚Ä¢ Alt/Cmd ‚Üí A ‚Üí S      (Sort Descending)');\n    console.log('‚Ä¢ Alt/Cmd ‚Üí H ‚Üí C ‚Üí C  (Clear Content)');\n  },\n  \n  // Test conflict detection\n  checkConflicts: (sequence) => {\n    const existing = [\n      ['H','V','V'], ['H','B','B'], ['H','B','T'], \n      ['H','O','I'], ['A','S'], ['H','C','C']\n    ];\n    \n    const hasConflict = existing.some(seq => {\n      const seqStr = sequence.join('');\n      const existingStr = seq.join('');\n      return seqStr === existingStr || \n             seqStr.startsWith(existingStr) || \n             existingStr.startsWith(seqStr);\n    });\n    \n    console.log(`üîç Conflict check for [${sequence.join(' ‚Üí ')}]:`, \n                hasConflict ? '‚ùå CONFLICT' : '‚úÖ OK');\n    return !hasConflict;\n  }\n};\n\nconsole.log('üéπ KeyTips Developer Console loaded!');\nconsole.log('Available commands:');\nconsole.log('‚Ä¢ keytipsConsole.addCustomKeytip([\"H\", \"X\", \"Y\"], \"My Command\")');\nconsole.log('‚Ä¢ keytipsConsole.removeCustomKeytip([\"H\", \"X\", \"Y\"])');\nconsole.log('‚Ä¢ keytipsConsole.listAllKeytips()');\nconsole.log('‚Ä¢ keytipsConsole.checkConflicts([\"H\", \"X\", \"Y\"])');\n\nexport {}; // Make this a module\n