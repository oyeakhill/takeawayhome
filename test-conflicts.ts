// ==============================================\n// CONFLICT DETECTION TEST\n// Uncomment sections to test conflict detection\n// ==============================================\n\nimport { validateRegistry, logConflicts, type KeyTip, KEYTIPS } from './KeyTipsRegistry';\n\n// Test 1: Current registry (should be clean)\nconsole.log('\\n=== TESTING: Current Registry ===');\nlogConflicts();\n\n// Uncomment to test conflict detection:\n/*\n// Test keytips with intentional conflicts\nconst testKeytips: KeyTip[] = [\n  ...KEYTIPS, // Start with current good keytips\n  \n  // Add problematic keytips to demonstrate conflicts:\n  { chord: [\"H\", \"B\"], command: \"pasteValues\", label: \"Border Menu\" },       // PREFIX CONFLICT + COMMAND ID CONFLICT\n  { chord: [\"H\", \"V\", \"V\"], command: \"borderBottom\", label: \"Paste Special\" }, // DUPLICATE SEQUENCE\n];\n\nconsole.log('\\n=== TESTING: Registry with Conflicts ===');\nlogConflicts(testKeytips);\n\nconst report = validateRegistry(testKeytips);\nconsole.log('\\nDetailed Report:');\nconsole.log('- Has conflicts:', report.hasConflicts);\nconsole.log('- Number of conflicts:', report.conflicts.length);\n*/\n\nexport {}; // Make this a module\n